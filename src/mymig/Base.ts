import { Analyzer, Config } from "./Analyzer.js";
import { Table } from "./Table.js";
/**
 * ベースクラス
 */
export class Base {
  ana: Analyzer;
  tables: Table[] = [];
  imports: { [key: string]: string[] } = {};
  databaseClass: string = undefined!;

  /**
   * コンストラクタ
   */
  constructor(ana: Analyzer) {
    this.ana = ana;
  }

  /**
   * ブロックを追加
   */
  newTable() {
    const table = new Table(this.ana);
    this.tables.push(table);
    return table;
  }

  /**
   * TypeScript生成
   */
  ts() {
    let string = "// Do not edit this file.\n\n";
    //string += `import { MyMigDB, Table } from "@nence/mymig";\n`;
    for (const path of Object.keys(this.imports)) {
      const types = this.imports[path];
      string += "import { " + types.join(", ") + ' } from "' + path + '"\n';
    }

    //string += `${this.dateImport}\n`;
    string += `\n`;
    //string += "export type Where<T> = WhereType<T>;\n";

    this.tables.forEach((block) => {
      string += block.ts();
      string += "\n";
    });
    return string;
  }

  getTableNames() {
    const names: string[] = [];
    for (const table of this.tables) {
      names.push(table.name);
    }
    return names;
  }

  // createSQLFile(path: string) {
  //   const sql = this.sql;
  //   Deno.writeTextFileSync(path, sql);
  //   return sql;
  // }

  createTsFile(option: Config) {
    this.imports = option.imports;
    // tsファイルをレンダリングして返す。
    return this.ts();
  }
}
